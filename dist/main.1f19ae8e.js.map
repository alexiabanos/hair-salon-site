{"version":3,"sources":["main.js"],"names":["nav","document","querySelector","toggle","querySelectorAll","_iterator","_createForOfIteratorHelper","_step","s","n","done","element","value","addEventListener","classList","err","e","f","links","_iterator2","_step2","link","remove","header","navHeight","offsetHeight","changeHeaderWhenScroll","window","scrollY","add","swiper","Swiper","slidesPerView","pagination","el","navigation","nextEl","prevEl","mousewheel","keyboard","breakpoints","setWrapperSize","scrollReveal","ScrollReveal","origin","distance","duration","reset","reveal","interval","backToTopButton","backToTopWhenScroll","sections","activateMenuAtCurrentSection","checkpoint","pageYOffset","innerHeight","_iterator3","_step3","section","sectionTop","offsetTop","sectionHeight","sectionId","getAttribute","checkpointStart","checkpointEnd"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["// CHANGE HEADER WHEN SCROLLING\nconst nav = document.querySelector('#header nav')\nconst toggle = document.querySelectorAll('nav .toggle')\n\n\nfor(const element of toggle) {\n  element.addEventListener('click', () => {\n    nav.classList.toggle('show')\n  })\n}\n\n// MENU CLOSES WHEN CLICKING ON MENU LIST ITEM\nconst links = document.querySelectorAll('nav ul li a')\n\nfor (const link of links) {\n  link.addEventListener('click', () => {\n    nav.classList.remove('show')\n  })\n}\n\n// CHANGE HEADER WHEN SCROLLING\nconst header = document.querySelector(\"#header\")\nconst navHeight = header.offsetHeight\nfunction changeHeaderWhenScroll() {\n  \n    if(window.scrollY >= navHeight) {\n      header.classList.add('scroll')\n    } else {\n      header.classList.remove('scroll')\n    }\n}\n\n// SWIPER\nconst swiper = new Swiper('.swiper', {\n  slidesPerView: 1,\n  pagination: {\n    el: '.swiper-pagination'\n  },\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  mousewheel: true,\n  keyboard: true,\n  breakpoints: {\n    992: {\n      slidesPerView: 2,\n      setWrapperSize: true,\n    }\n  }\n});\n\n// SCROLL REVEAL\nconst scrollReveal = ScrollReveal({\n  origin: 'top',\n  distance: '30px',\n  duration: 700,\n  reset: true,\n})\n\nscrollReveal.reveal(`#home .text, #home .image, #about .image, #about .text, #services header, #services .card, #testimonials header, #testimonials .testimonials, #contact .text, #contact .links, footer .brand, footer .social`, { interval: 100})\n\n// BACK TO TOP BUTTON\nconst backToTopButton = document.querySelector('.back-to-top')\nfunction backToTopWhenScroll() {\n\n    if(window.scrollY >= 1680) {\n      backToTopButton.classList.add('show')\n    } else {\n      backToTopButton.classList.remove('show')\n    }\n}\n\n// ACTIVE MENU ACCORDING TO SECTION VISIBLE ON THE PAGE\nconst sections = document.querySelectorAll('main section[id]')\nfunction activateMenuAtCurrentSection() {\n\n  const checkpoint = window.pageYOffset + ((window.innerHeight / 8) * 4)\n\n  for( const section of sections ) {\n    const sectionTop = section.offsetTop\n    const sectionHeight = section.offsetHeight\n    const sectionId = section.getAttribute('id')\n\n    const checkpointStart = checkpoint >= sectionTop\n    const checkpointEnd = checkpoint <= sectionTop + sectionHeight\n\n    if(checkpointStart && checkpointEnd) {\n      document.querySelector('nav ul li a[href*=' + sectionId + ']').classList.add('active')\n    } else {\n      document.querySelector('nav ul li a[href*=' + sectionId + ']').classList.remove('active')\n    }\n\n  }\n}\n\n// WHEN SCROLLING\nwindow.addEventListener('scroll', () => {\n  changeHeaderWhenScroll()\n  backToTopWhenScroll()\n  activateMenuAtCurrentSection()\n})\n"]}